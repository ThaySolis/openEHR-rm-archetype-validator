{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.1.0/Data_types/DV_PROPORTION-detailed.json",
    "title": "DV_PROPORTION",
    "description": "Models a ratio of values, i.e. where the numerator and denominator are both pure numbers. The `_valid_proportion_kind_` property of the `PROPORTION_KIND` class is used to control the type attribute to be one of a defined set.\n\nUsed for recording titers (e.g. 1:128), concentration ratios, e.g. Na:K (unitary denominator), albumin:creatinine ratio, and percentages, e.g. red cell distirbution width (RDW). \n \nMisuse: Should not be used to represent things like blood pressure which are often written using a  '/' character, giving the misleading impression that the item is a ratio, when in fact it is a structured value. Similarly, visual acuity, often written as (e.g.) \"6/24\" in clinical notes is not a ratio but an ordinal (which includes non-numeric symbols like CF = count fingers etc). Should not be used for formulations. ",
    "$comments": "Defined in Data_types IM, inherits from PROPORTION_KIND, DV_AMOUNT",
    "type": "object",
    "properties": {
        "normal_status": {
            "description": "Optional normal status indicator of value with respect to normal range for this value. Often included by lab, even if the normal range itself is not included. Coded by ordinals in series HHH, HH, H, (nothing), L, LL, LLL; see openEHR terminology group  `normal_status`. ",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "normal_range": {
            "description": "Optional normal range. ",
            "$ref": "all-detailed.json#/definitions/DV_INTERVAL_of_DV_PROPORTION"
        },
        "other_reference_ranges": {
            "description": "Optional tagged other reference ranges for this value in its particular measurement context.",
            "type": "array",
            "items": {
                "$ref": "all-detailed.json#/definitions/REFERENCE_RANGE_of_DV_PROPORTION"
            }
        },
        "magnitude_status": {
            "description": "Optional status of magnitude with values: \n\n* `\"=\"`   :   magnitude is a point value \n* `\"<\"`   :   value is < magnitude \n* `\">\"`   :   value is > magnitude \n* `\"<=\"` : value is <= magnitude \n* `\">=\"` : value is >= magnitude \n* `\"~\"`   :   value is approximately magnitude \n\nIf not present, assumed meaning is  `\"=\"` . \n",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/String"
        },
        "accuracy": {
            "description": "Accuracy of measurement, expressed either as a half-range percent value (`_accuracy_is_percent_` = `True`) or a half-range quantity. A value of `0` means that accuracy is 100%, i.e. no error.\n\nA value of `_unknown_accuracy_value_` means that accuracy was not recorded.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Real"
        },
        "accuracy_is_percent": {
            "description": "If `True`, indicates that when this object was created, `_accuracy_` was recorded as a percent value; if `False`, as an absolute quantity value.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
        },
        "numerator": {
            "description": "Numerator of ratio",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Real"
        },
        "denominator": {
            "description": "Denominator of ratio.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Real"
        },
        "type": {
            "description": "Indicates semantic type of proportion, including percent, unitary etc.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Integer"
        },
        "precision": {
            "description": "Precision  to  which  the  `_numerator_` and `_denominator_` values of  the  proportion are expressed, in terms of number  of decimal places. The value 0 implies an integral quantity. The value -1 implies no limit, i.e. any number of decimal places. ",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Integer"
        }
    },
    "required": [
        "numerator",
        "denominator",
        "type"
    ],
    "$inherits": [
        "all-detailed.json#/definitions/PROPORTION_KIND",
        "all-detailed.json#/definitions/DV_AMOUNT"
    ],
    "$functions": {
        "less_than": {
            "description": "True if this Proportion is less than  `_other_`. Only valid if `_is_strictly_comparable_to()_` is True.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "less_than_or_equal": {
            "description": "True if current object less than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than": {
            "description": "True if current object greater than `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "greater_than_or_equal": {
            "description": "True if current object greater than or equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Ordered"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_strictly_comparable_to": {
            "description": "Return True if the `_type_` of this proportion is the same as the `_type_` of `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_ORDERED"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_simple": {
            "description": "True if this quantity has no reference ranges.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_normal": {
            "description": "Value is in the normal range, determined by comparison of the value to `_normal_range_` if present, or by the `_normal_status_` marker if present. \n",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_magnitude_status": {
            "description": "Test whether a string value is one of the valid values for the magnitude_status attribute. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "magnitude": {
            "description": "Effective magnitude represented by ratio.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Real"
            }
        },
        "accuracy_unknown": {
            "description": "True if accuracy is not known, e.g. due to not being recorded or discernable.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_equal": {
            "description": "Return True if this `DV_AMOUNT` is considered equal to `_other_`.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "valid_percentage": {
            "description": "Test whether a number is a valid percentage, i.e. between 0 and 100. ",
            "parameters": {
                "number": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Ordered_Numeric"
                }
            },
            "required_parameters": [
                "number"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "add": {
            "description": "Sum of two strictly comparable proportions.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
            }
        },
        "subtract": {
            "description": "Difference between two strictly comparable proportions.",
            "parameters": {
                "other": {
                    "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
                }
            },
            "required_parameters": [
                "other"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
            }
        },
        "multiply": {
            "description": "Product of this Proportion and `_factor_`.",
            "parameters": {
                "factor": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Real"
                }
            },
            "required_parameters": [
                "factor"
            ],
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_PROPORTION"
            }
        },
        "negative": {
            "description": "Negated version of current object, such as used for representing a difference, e.g. a weight loss.",
            "return": {
                "$ref": "all-detailed.json#/definitions/DV_AMOUNT"
            }
        },
        "valid_proportion_kind": {
            "description": "True if n is one of the defined types. ",
            "parameters": {
                "nq": {
                    "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Integer"
                }
            },
            "required_parameters": [
                "nq"
            ],
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_integral": {
            "description": "True if the `_numerator_` and `_denominator_` values are integers, i.e. if `_precision_` is 0.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Post_result": "Result = magnitude < other.magnitude",
        "Other_reference_ranges_validity": "other_reference_ranges /= Void implies not other_reference_ranges.is_empty",
        "Is_simple_validity": "(normal_range = Void and other_reference_ranges = Void) implies is_simple",
        "Normal_status_validity": "normal_status /= Void implies code_set (Code_set_id_normal_statuses).has_code (normal_status)",
        "Normal_range_and_status_consistency": "(normal_range /= Void and normal_status /= Void) implies (normal_status.code_string.is_equal (\u201cN\u201d) xor not normal_range.has (self))",
        "Pre": "normal_range /= Void or normal_status /= Void",
        "Post_range": "normal_range /= Void implies Result = normal_range.has (self)",
        "Post_status": "normal_status /= Void implies normal_status.code_string.is_equal (\u201cN\u201d)",
        "Magnitude_status_valid": "magnitude_status /= Void implies valid_magnitude_status (magnitude_status)",
        "Post": "Result = s in {\"=\", \"<\", \">\", \"<=\", \">=\", \"~\"}",
        "Pre_comparable": "is_strictly_comparable()",
        "Accuracy_is_percent_validity": "accuracy = 0 implies not accuracy_is_percent",
        "Accuracy_validity": "accuracy_is_percent implies valid_percentage (accuracy)",
        "Type_validity": "valid_proportion_kind (type)",
        "Precision_validity": "precision = 0 implies is_integral",
        "Is_integral_validity": "is_integral implies (numerator.floor = numerator and denominator.floor = denominator)",
        "Fraction_validity": "(type = pk_fraction or type = pk_integer_fraction) implies is_integral",
        "Unitary_validity": "type = pk_unitary implies denominator = 1",
        "Percent_validity": "type = pk_percent implies denominator = 100",
        "Valid_denominator": "denominator /= 0.0"
    }
}