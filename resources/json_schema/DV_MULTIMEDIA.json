{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.1.0/Data_types/DV_MULTIMEDIA-detailed.json",
    "title": "DV_MULTIMEDIA",
    "description": "A specialisation of `DV_ENCAPSULATED` for audiovisual and bio-signal types. Includes further metadata relating to multimedia types which are not applicable to other subtypes of `DV_ENCAPSULATED`.",
    "$comments": "Defined in Data_types IM, inherits from DV_ENCAPSULATED",
    "type": "object",
    "properties": {
        "charset": {
            "description": "Name of character encoding scheme in which this value is encoded. Coded from openEHR Code Set  character sets . Unicode is the default assumption in openEHR, with UTF-8 being the assumed encoding. This attribute allows for variations from these assumptions. ",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "language": {
            "description": "Optional indicator of the localised language in which the data is written, if relevant. Coded from openEHR Code Set `languages`.",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "alternate_text": {
            "description": "Text to display in lieu of multimedia display/replay.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/String"
        },
        "uri": {
            "description": "URI reference to electronic information stored outside the record as a file, database entry etc, if supplied as a reference. \n",
            "$ref": "all-detailed.json#/definitions/DV_URI"
        },
        "data": {
            "description": "The actual data found at `_uri_`, if supplied inline.",
            "type": "array",
            "items": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Character"
            }
        },
        "media_type": {
            "description": "Data media type coded from openEHR code set  media types  (interface for the IANA MIME types code set). \n",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "compression_algorithm": {
            "description": "Compression type, a coded value from the openEHR Integrity check code set. Void means no compression. ",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "integrity_check": {
            "description": "Binary cryptographic integrity checksum.",
            "type": "array",
            "items": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Character"
            }
        },
        "integrity_check_algorithm": {
            "description": "Type of integrity check, a coded value from the openEHR `Integrity check` code set. ",
            "$ref": "all-detailed.json#/definitions/CODE_PHRASE"
        },
        "thumbnail": {
            "description": "The thumbnail for this item, if one exists; mainly for graphics formats.",
            "$ref": "all-detailed.json#/definitions/DV_MULTIMEDIA"
        },
        "size": {
            "description": "Original size in bytes of unencoded encapsulated data. I.e. encodings such as base64, hexadecimal etc do not change the value of this attribute.",
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Integer"
        }
    },
    "required": [
        "media_type",
        "size"
    ],
    "$inherits": [
        "all-detailed.json#/definitions/DV_ENCAPSULATED"
    ],
    "$functions": {
        "is_external": {
            "description": "Computed from the value of the `_uri_` attribute: True if  the data is stored externally to the record, as indicated by `_uri_`. A copy may also be stored internally, in which case `_is_expanded_` is also true.",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_inline": {
            "description": "Computed from the value of the data attribute. True if  the  data is stored  in  expanded  form, ie within the EHR itself. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "is_compressed": {
            "description": "Computed from the value of the `_compression_algorithm_` attribute: True if  the  data is stored in compressed form. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        },
        "has_integrity_check": {
            "description": "Computed from the value of the `_integrity_check_algorithm_` attribute: True if an integrity check has been computed. ",
            "return": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.2.0/Foundation_types/all-detailed.json#/definitions/Boolean"
            }
        }
    },
    "$invariants": {
        "Size_valid": "size >= 0",
        "Language_valid": "language /= Void implies code_set (Code_set_id_languages).has_code (language)",
        "Charset_valid": "charset /= Void implies code_set (Code_set_id_character_sets).has_code (charset)",
        "Not_empty": "is_inline or is_external",
        "Media_type_valid": "media_type /= Void and then code_set (Code_set_id_media_types).has_code (media_type)",
        "Compression_algorithm_validity": "compression_algorithm /= Void implies code_set (Code_set_id_compression_algorithms).has_code (compression_algorithm)",
        "Integrity_check_validity": "integrity_check /= Void implies integrity_check_algorithm /= Void",
        "Integrity_check_algorithm_validity": "integrity_check_algorithm /= Void implies code_set (Code_set_id_integrity_check_algorithms).has_code (integrity_check_algorithm)"
    }
}